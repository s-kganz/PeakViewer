#: kivy 1.11.1
#: import Graph kivy_garden.graph
#: import TreeViewLabel kivy.uix.treeview.TreeViewLabel
#: import AppMenu kivy_garden.contextmenu
#: import ContextMenu kivy_garden.contextmenu
#: import ContextMenuTextItem kivy_garden.contextmenu    
#: import Factory kivy.factory.Factory

#: import pub pubsub.pub

#: include dialogs.kv

<TreeViewPlottable>:
    check: check
    text: 'An unnamed spectrum.' # Set during instantiation
    height: 30
    spacing: 10
    CheckBox:
        id: check
        on_active: self.parent.send_plot_message() # pubsub is not defined here
        size_hint_x: None
        width: 15
    Label:
        text: self.parent.text
        size_hint_x: None
        width: self.texture_size[0]
    
# Root widget of the application
<MyLayout>:
    # Make widgets important for application logic accessible
    tree: hierarchy
    graph: graph
    
    # Container for everything that isn't the app menu
    BoxLayout:
        height: root.height - app_menu.height
        top: root.height - app_menu.height
        size_hint: 1, None
        orientation: 'vertical'
        # Space the graphing area and hierarchy on the left and right
        BoxLayout:
            id: content_area
            orientation: 'horizontal'
            # Graphing area
            BoxLayout:
                orientation: 'vertical'
                # Graphing window
                # Sits inside a splitter so that everything remains resizable
                Splitter:
                    sizable_from: 'bottom'
                    Graph:
                        id: graph
                        border_color: [0, 0, 0, 0]
                        background_color: [0.25, 0.25, 0.25, 1.0]
                        xmin: 0
                        xmax: 100
                        ymin: -5
                        ymax: 5
                # Graphing partner widgets
                BoxLayout:
                    orientation: 'vertical'
                    BoxLayout:
                        orientation: 'horizontal'
                        Button:
                            text: 'zoom in'
                            on_release: root.zoom_in()
                        Button:
                            text: 'zoom out'
                            on_release: root.zoom_out()
                    Button:
                        text: 'Make a plot'
                        on_press: root.tree._create_fake_data()
                    Button:
                        text: 'Clear'
                        on_press: pub.sendMessage('Plot.RemoveAll')
            
            # View for data, directory, drawing
            TabbedPanel:
                # Update this value with the number of tabs
                tab_width: self.width / 3
                id: tab_panel
                default_tab: hierarchy_tab
                size_hint_x: 0.5
                # Show all data in the application
                TabbedPanelItem:
                    id: hierarchy_tab
                    text: 'Hierarchy'
                    ScrollView:
                        scroll_wheel_distance: 30
                        DataTreeView:
                            hide_root: True
                            id: hierarchy
                            # Set these two properties to enable scrolling
                            size_hint_y: None
                            height: self.minimum_height
                # Widgets associated with drawing stuff
                TabbedPanelItem:
                    id: drawing_tab
                    text: 'Drawing'
                    ScrollView:
                        scroll_wheel_distance: 30
                        Label: 
                            text: "Something something color picker"
                # View files in the project directory
                TabbedPanelItem:
                    id: directory_tab
                    text: "Directory"
                    #FileChooserListView:
                    #    multiselect: False
    
    # Main application menu
    # This needs to be the last widget in the root layout
    # in order to be drawn on top of everything below it
    AppMenu:
        id: app_menu
        top: root.height
        cancel_handler_widget: root
        AppMenuTextItem:
            text: 'Data'
            ContextMenu:
                ContextMenuTextItem:
                    text: "Load delimited file..."
                    on_release: Factory.SingleFileLoadDialog(title=self.text).open()
                ContextMenuTextItem:
                    text: "Item 12"
        AppMenuTextItem:
            text: 'Fluff'
            ContextMenu:
                ContextMenuTextItem:
                    text: 'Say hello!'
                    on_release: print('Hello!')
